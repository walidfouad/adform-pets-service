{"version":3,"sources":["../../src/schema/resolvers.js"],"names":["console","log","resolvers","Pet","__resolveType","pet","context","info","type","Query","getOwners","root","args","getPets","getOwnerPets","ownerId","Mutation","addPet","input","updatePet","petId","name","colour","age","breed"],"mappings":";;;;;AAAAA,QAAQC,GAAR,CAAY,oBAAZ;;AAEA,IAAMC,YAAY;AACdC,SAAK;AACDC,qBADC,yBACaC,GADb,EACkBC,OADlB,EAC2BC,IAD3B,EACiC;AAC9B,gBAAIF,IAAIG,IAAJ,KAAa,KAAjB,EAAwB;AACpB,uBAAO,KAAP;AACH;;AAED,gBAAIH,IAAIG,IAAJ,KAAa,KAAjB,EAAwB;AACpB,uBAAO,KAAP;AACH;;AAED,mBAAO,IAAP;AACH;AAXA,KADS;AAcdC,WAAO;AACHC,mBAAW,mBAACC,IAAD,EAAOC,IAAP,EAAaN,OAAb,EAAsBC,IAAtB,EAA+B;AACtC,mBAAO,cAAP;AACH,SAHE;AAIHM,iBAAS,iBAACF,IAAD,EAAOC,IAAP,EAAaN,OAAb,EAAsBC,IAAtB,EAA+B;AACpC,mBAAO,cAAP;AACH,SANE;AAOHO,sBAAc,sBAACH,IAAD,QAAoBL,OAApB,EAA6BC,IAA7B,EAAsC;AAAA,gBAA7BQ,OAA6B,QAA7BA,OAA6B;;AAChD,mBAAO,cAAP;AACH;AATE,KAdO;AAyBdC,cAAU;AACNC,gBAAQ,gBAACN,IAAD,SAEF;AAAA,gBADFO,KACE,SADFA,KACE;;AACF;AACA,mBAAOA,KAAP;AACH,SANK;AAONC,mBAAW,mBAACR,IAAD,SAML;AAAA,gBALFS,KAKE,SALFA,KAKE;AAAA,gBAJFC,IAIE,SAJFA,IAIE;AAAA,gBAHFC,MAGE,SAHFA,MAGE;AAAA,gBAFFC,GAEE,SAFFA,GAEE;AAAA,gBADFC,KACE,SADFA,KACE;;AACF,mBAAO,cAAP;AACH;AAfK;;AAzBI,CAAlB;AA6CAxB,QAAQC,GAAR,CAAY,iCAAZ;kBACeC,S","file":"resolvers.js","sourcesContent":["console.log('defining resolvers');\r\n\r\nconst resolvers = {\r\n    Pet: {\r\n        __resolveType(pet, context, info) {\r\n            if (pet.type === 'CAT') {\r\n                return 'Cat';\r\n            }\r\n\r\n            if (pet.type === 'DOG') {\r\n                return 'Dog';\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n    Query: {\r\n        getOwners: (root, args, context, info) => {\r\n            return 'Hello world!';\r\n        },\r\n        getPets: (root, args, context, info) => {\r\n            return 'Hello world!';\r\n        },\r\n        getOwnerPets: (root, { ownerId }, context, info) => {\r\n            return 'Hello world!';\r\n        }\r\n    },\r\n    Mutation: {\r\n        addPet: (root, {\r\n            input\r\n        }) => {\r\n            //TODO: add pet to database\r\n            return input;\r\n        },\r\n        updatePet: (root, {\r\n            petId,\r\n            name,\r\n            colour,\r\n            age,\r\n            breed\r\n        }) => {\r\n            return 'Hello world!';\r\n        }\r\n    }\r\n\r\n\r\n};\r\nconsole.log('-- end of defining resolvers --');\r\nexport default resolvers;"]}