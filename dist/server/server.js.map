{"version":3,"sources":["../../src/server/server.js"],"names":["app","use","stream","accessLogStream","err","req","res","next","logger","error","status","send","server","ApolloServer","schema","applyMiddleware"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,sBAAO,QAAP,EAAiB;AACrBC,YAAQC;AADa,CAAjB,CAAR;;AAIA;AACAH,IAAIC,GAAJ,CAAQ,qBAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,uBAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQ,UAACG,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC7BC,qBAAOC,KAAP,CAAa,eAAb,EAA8BL,GAA9B;AACAE,QAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB;AACH,CAHD;;AAMA;;AAEA,IAAMC,SAAS,IAAIC,iCAAJ,CAAiB,EAAEC,wBAAF,EAAjB,CAAf;AACA;AACAF,OAAOG,eAAP,CAAuB,EAAEf,QAAF,EAAvB;;QAGSY,M,GAAAA,M;kBACMZ,G","file":"server.js","sourcesContent":["import { ApolloServer } from 'apollo-server-express';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport morgan from 'morgan';\r\n\r\nimport logger, { accessLogStream } from '../utils/logger';\r\n\r\nimport schema from '../schema/schema';\r\n\r\nconst app = express();\r\n\r\n// log all requests to access.log\r\napp.use(morgan('common', {\r\n    stream: accessLogStream\r\n}));\r\n\r\n// enable all CORS Requests\r\napp.use(cors());\r\n\r\n// help in secuirty\r\napp.use(helmet());\r\n\r\n// handle error requests\r\napp.use((err, req, res, next) => {\r\n    logger.error(\"REQUEST ERROR\", err);\r\n    res.status(500).send(\"REQUEST ERROR\");\r\n});\r\n\r\n\r\n// initiate a new apollo server with schema definitions and resolvers\r\n\r\nconst server = new ApolloServer({ schema });\r\n// it defaults to path '/graphql'\r\nserver.applyMiddleware({ app });\r\n\r\n\r\nexport { server };\r\nexport default app;"]}